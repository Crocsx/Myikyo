//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.8.2
//     from Assets/Scripts/Input/GameControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine;

public partial class @GameControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameControls"",
    ""maps"": [
        {
            ""name"": ""Camera"",
            ""id"": ""cd54028e-1c62-4d41-a8c7-b89067d4207e"",
            ""actions"": [
                {
                    ""name"": ""PrimaryControlPosition"",
                    ""type"": ""Value"",
                    ""id"": ""d4ce5720-9974-468e-9d56-b64b5c5c5573"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryControlPosition"",
                    ""type"": ""Value"",
                    ""id"": ""0b56703a-98be-4a70-9e5b-b3c193cdd73c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryControlTouchContact"",
                    ""type"": ""Button"",
                    ""id"": ""bdc0b1a6-716a-44fa-91bc-7ab5d6c26ed6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""85a299bb-ef93-465c-9232-9aa3fa491ca0"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Debug"",
                    ""type"": ""Button"",
                    ""id"": ""e39f96b4-73d1-4468-9e63-0556299d478d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryControlDown"",
                    ""type"": ""Button"",
                    ""id"": ""4bec4553-963e-45ad-80e6-243f955c767f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryControlDown"",
                    ""type"": ""Button"",
                    ""id"": ""3ea58fb1-b2ca-4b67-b932-f9dac525949a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""82f948a5-8ed3-4e49-8d78-3d3a852a94c5"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryControlPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f66ad90-5f32-49a1-9b92-8cd75dce926e"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryControlPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0446369-d2f2-438f-a78e-6d07e4d422d1"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryControlPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc4712ca-6fdb-42e4-b2d5-7b79b2bcb9cf"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryControlTouchContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2fbfa3ed-6578-4c93-9918-75fc2d21e186"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=200)"",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a04390e8-ee14-4609-a940-c673bb91b26e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Debug"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17f7adaa-e975-4857-bd8c-dcb4df49adf1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryControlDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8b1680d-b834-45b4-85d4-bb0b228a2090"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryControlDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76d0b5c6-58cb-4357-978b-d8a4d17e6dda"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryControlDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08139879-8c20-4f11-bd5e-deab30d1c5db"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryControlDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_PrimaryControlPosition = m_Camera.FindAction("PrimaryControlPosition", throwIfNotFound: true);
        m_Camera_SecondaryControlPosition = m_Camera.FindAction("SecondaryControlPosition", throwIfNotFound: true);
        m_Camera_SecondaryControlTouchContact = m_Camera.FindAction("SecondaryControlTouchContact", throwIfNotFound: true);
        m_Camera_Zoom = m_Camera.FindAction("Zoom", throwIfNotFound: true);
        m_Camera_Debug = m_Camera.FindAction("Debug", throwIfNotFound: true);
        m_Camera_PrimaryControlDown = m_Camera.FindAction("PrimaryControlDown", throwIfNotFound: true);
        m_Camera_SecondaryControlDown = m_Camera.FindAction("SecondaryControlDown", throwIfNotFound: true);
    }

    ~@GameControls()
    {
        Debug.Assert(!m_Camera.enabled, "This will cause a leak and performance issues, GameControls.Camera.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Camera
    private readonly InputActionMap m_Camera;
    private List<ICameraActions> m_CameraActionsCallbackInterfaces = new List<ICameraActions>();
    private readonly InputAction m_Camera_PrimaryControlPosition;
    private readonly InputAction m_Camera_SecondaryControlPosition;
    private readonly InputAction m_Camera_SecondaryControlTouchContact;
    private readonly InputAction m_Camera_Zoom;
    private readonly InputAction m_Camera_Debug;
    private readonly InputAction m_Camera_PrimaryControlDown;
    private readonly InputAction m_Camera_SecondaryControlDown;
    public struct CameraActions
    {
        private @GameControls m_Wrapper;
        public CameraActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @PrimaryControlPosition => m_Wrapper.m_Camera_PrimaryControlPosition;
        public InputAction @SecondaryControlPosition => m_Wrapper.m_Camera_SecondaryControlPosition;
        public InputAction @SecondaryControlTouchContact => m_Wrapper.m_Camera_SecondaryControlTouchContact;
        public InputAction @Zoom => m_Wrapper.m_Camera_Zoom;
        public InputAction @Debug => m_Wrapper.m_Camera_Debug;
        public InputAction @PrimaryControlDown => m_Wrapper.m_Camera_PrimaryControlDown;
        public InputAction @SecondaryControlDown => m_Wrapper.m_Camera_SecondaryControlDown;
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        public void AddCallbacks(ICameraActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraActionsCallbackInterfaces.Add(instance);
            @PrimaryControlPosition.started += instance.OnPrimaryControlPosition;
            @PrimaryControlPosition.performed += instance.OnPrimaryControlPosition;
            @PrimaryControlPosition.canceled += instance.OnPrimaryControlPosition;
            @SecondaryControlPosition.started += instance.OnSecondaryControlPosition;
            @SecondaryControlPosition.performed += instance.OnSecondaryControlPosition;
            @SecondaryControlPosition.canceled += instance.OnSecondaryControlPosition;
            @SecondaryControlTouchContact.started += instance.OnSecondaryControlTouchContact;
            @SecondaryControlTouchContact.performed += instance.OnSecondaryControlTouchContact;
            @SecondaryControlTouchContact.canceled += instance.OnSecondaryControlTouchContact;
            @Zoom.started += instance.OnZoom;
            @Zoom.performed += instance.OnZoom;
            @Zoom.canceled += instance.OnZoom;
            @Debug.started += instance.OnDebug;
            @Debug.performed += instance.OnDebug;
            @Debug.canceled += instance.OnDebug;
            @PrimaryControlDown.started += instance.OnPrimaryControlDown;
            @PrimaryControlDown.performed += instance.OnPrimaryControlDown;
            @PrimaryControlDown.canceled += instance.OnPrimaryControlDown;
            @SecondaryControlDown.started += instance.OnSecondaryControlDown;
            @SecondaryControlDown.performed += instance.OnSecondaryControlDown;
            @SecondaryControlDown.canceled += instance.OnSecondaryControlDown;
        }

        private void UnregisterCallbacks(ICameraActions instance)
        {
            @PrimaryControlPosition.started -= instance.OnPrimaryControlPosition;
            @PrimaryControlPosition.performed -= instance.OnPrimaryControlPosition;
            @PrimaryControlPosition.canceled -= instance.OnPrimaryControlPosition;
            @SecondaryControlPosition.started -= instance.OnSecondaryControlPosition;
            @SecondaryControlPosition.performed -= instance.OnSecondaryControlPosition;
            @SecondaryControlPosition.canceled -= instance.OnSecondaryControlPosition;
            @SecondaryControlTouchContact.started -= instance.OnSecondaryControlTouchContact;
            @SecondaryControlTouchContact.performed -= instance.OnSecondaryControlTouchContact;
            @SecondaryControlTouchContact.canceled -= instance.OnSecondaryControlTouchContact;
            @Zoom.started -= instance.OnZoom;
            @Zoom.performed -= instance.OnZoom;
            @Zoom.canceled -= instance.OnZoom;
            @Debug.started -= instance.OnDebug;
            @Debug.performed -= instance.OnDebug;
            @Debug.canceled -= instance.OnDebug;
            @PrimaryControlDown.started -= instance.OnPrimaryControlDown;
            @PrimaryControlDown.performed -= instance.OnPrimaryControlDown;
            @PrimaryControlDown.canceled -= instance.OnPrimaryControlDown;
            @SecondaryControlDown.started -= instance.OnSecondaryControlDown;
            @SecondaryControlDown.performed -= instance.OnSecondaryControlDown;
            @SecondaryControlDown.canceled -= instance.OnSecondaryControlDown;
        }

        public void RemoveCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraActions @Camera => new CameraActions(this);
    public interface ICameraActions
    {
        void OnPrimaryControlPosition(InputAction.CallbackContext context);
        void OnSecondaryControlPosition(InputAction.CallbackContext context);
        void OnSecondaryControlTouchContact(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnDebug(InputAction.CallbackContext context);
        void OnPrimaryControlDown(InputAction.CallbackContext context);
        void OnSecondaryControlDown(InputAction.CallbackContext context);
    }
}
